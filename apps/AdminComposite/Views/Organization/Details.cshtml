@using AdminComposite.Models
@using Euclid.Composites.Mvc.Extensions
@model UpdateOrganizationInputModel

<script type="text/javascript">
	$(document).ready(function () {
		$("#add-user").click(function () {
			$("<div></div>")
				.load("/Organization/GetUser")
				.modal({
					autoResize: true,
					autoPosition: true,
					position: new Array(25, 300),
					dataCss: { backgroundColor: "#fff", overflow: "auto", height: 385, width: 635 },
					containerCss: { height: 400, width: 650 }
				});

			return false;
		});

		$(".edit.user").click(function () {
			var organizationId = "11111111-1111-1111-1111-111111111111";
			$("<div></div>")
				.load("/Organization/GetUser?organizationId=" + organizationId + "&userId=" + $(this).attr("data-user-id"))
				.modal({
					autoResize: true,
					autoPosition: true,
					position: new Array(25, 300),
					dataCss: { backgroundColor: "#fff", overflow: "auto", height: 385, width: 635 },
					containerCss: { height: 400, width: 650 }
				});

		});

		$("#trigger-edit").click(function () {
			$("#organization-details .organization-detail").each(function (index, item) {
				var inputClass = "jeditable";
				$(item).editable("enable");
				$(item).editable(null, {
					cssclass: inputClass,
					onblur: "ignore"
				});

				$(item).click();
				$("#trigger-edit").hide();
				$("#save-edit").show();
				$("#cancel-edit").show();
				$("#cancel-edit").focus();
			});
		});

		$("#save-edit").click(function () {
			$("#organization-details .organization-detail").each(function (index, item) {
				var id = item.id;
				var inputSelector = "#" + id + " input";
				var value = $(inputSelector).val();

				var updateSelector = "#update-" + id;
				$(updateSelector).val(value);
				$(item).attr("data-original-value", value);
				console.log(id + " = " + value);
			});

			$("#update-form").submit();
			resetEditableFields();
		});


		$("#cancel-edit").click(function () {
			resetEditableFields();
		});
	});

	function resetEditableFields() {
		$("#organization-details .organization-detail").each(function (index, item) {
			item.reset();
			$(item).editable("disable");
			$(item).text($(item).attr('data-original-value'));
		});

		$("#trigger-edit").show();
		$("#save-edit").hide();
		$("#cancel-edit").hide();
	}

	function deleteUser(userId) {
		alert("deleteing user: " + userId);
	}
</script>

<style>
	.jeditable 
	{
		margin: 0;
		padding: 0;
		display: inline;
	}
	
	.organization-detail 
	{
		width:200px;
		/* display:inline block; */
	}
</style>

<article>
	<header>
		<h2>Manage Organization</h2>
	</header>

	<form action="#">
		<fieldset>
			<legend>Details</legend>

			<dl id="organization-details">
				<dt><label for="organization-name">Organization Name</label></dt>
				<dd class="text"><p id="organization-name" class="organization-detail" data-original-value="@Model.OrganizationName">@Model.OrganizationName</p></dd>

				<dt><label for="organization-slug">Slug</label></dt>
				<dd class="text"><p id="organization-slug" class="organization-detail">slug</p></dd>

				<dt><label for="organization-url">Website Url</label></dt>
				<dd class="text"><p id="organization-url" class="organization-detail" data-original-value="@Model.OrganizationUrl">@Model.OrganizationUrl</p></dd>

				<dt><label for="organization-phone">Phone Number</label></dt>
				<dd class="text"><p id="organization-phone" class="organization-detail"  data-original-value="@Model.PhoneNumber">@Model.PhoneNumber</p></dd>

				<dt><label for="organization-address">Address</label></dt>
				<dd class="text"><p id="organization-address" class="organization-detail"  data-original-value="@Model.Address">@Model.Address</p></dd>

				<dt><label for="organization-address-1">Address 2</label></dt>
				<dd class="text"><p id="organization-address-2" class="organization-detail"  data-original-value="@Model.Address2">@Model.Address2</p></dd>

				<dt><label for="organizaiton-city">City</label></dt>
				<dd class="text"><p id="organization-city" class="organization-detail"  data-original-value="@Model.City">@Model.City</p></dd>

				<dt><label for="organization-state">State / Region</label></dt>
				<dd class="text"><p id="organization-state" class="organization-detail"  data-original-value="@Model.State">@Model.State</p></dd>

				<dt><label for="organization-zip">Zip / Postal Code</label></dt>
				<dd class="text"><p id="organization-zip" class="organization-detail"  data-original-value="@Model.Zip">@Model.Zip</p></dd>

				<dt><label for="organization-country">Country</label></dt>
				<dd class="text"><p id="organization-country" class="organization-detail"  data-original-value="@Model.Country">@Model.Country</p></dd>
			</dl>
		</fieldset>

		<button type="button" id="trigger-edit">Edit</button>
		<button type="button" id="cancel-edit" style="display:none">Cancel</button>
		<button type="button" id="save-edit" style="display:none">Save</button>
	</form>

	@using (Html.BeginFormForInputModel(Model, false, string.Empty, "update-form"))
	{
		@Html.HiddenFor(m => m.OrganizationIdentifier)
		@Html.HiddenFor(m=>m.Address, new { id="update-organization-address" })
		@Html.HiddenFor(m => m.Address2, new { id = "update-organization-address2" })
		@Html.HiddenFor(m => m.City, new { id = "update-organization-city" })
		@Html.HiddenFor(m => m.Country, new { id = "update-organization-country" })
		@Html.HiddenFor(m => m.OrganizationName, new { id = "update-organization-name" })
		@Html.HiddenFor(m => m.OrganizationUrl, new { id = "update-organization-url" })
		@Html.HiddenFor(m => m.PhoneNumber, new { id = "update-organization-phone" })
		@Html.HiddenFor(m => m.State, new { id = "update-organization-state" })
		@Html.HiddenFor(m => m.Zip, new { id = "update-organization-zip" })
	}

</article>

@section Breadcrumbs {
	<ul id="breadcrumbs">
		<li><a href="@Url.Action("Index", "Dashboard")" title="Back to Homepage">Home</a></li>
		<li>Manage @ViewBag.OrganizationName</li>
	</ul>
}