<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="BuildAll">
	<PropertyGroup>
		<BaseDir>$(MSBuildProjectDirectory)\..\</BaseDir>
		<Configuration Condition="'$(Configuration)'==''" >Release</Configuration>
		<OutputDir>.\output</OutputDir>
		<Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
	</PropertyGroup>

	<!-- 
		Can be run in a local dev environment or on a CI server.

		* Remove all artifacts from any previous builds
		* Update all relevant values in AssemblyInfo.cs files (use SemVer)
		* Compile Euclid.sln
		* Obtain all Common assemblies and combine with ilmerge where appropriate. For now, don't merge dependencies.
		* Obtain all Framework assemblies and combine with ilmerge where appropriate. For now, don't merge dependencies.
		* Obtain all SDK assemblies and combine with ilmerge where appropirate. For now, don't merge dependencies.
		* Create nuget package for Common, using nuget dependencies for things such as nHibernate where possible.
		* Create nuget package for Framework, using nuget dependencies for Euclid.Common and anything else that makes sense.
		* Create nuget package for SDK, one per composite.
		* Update local nuget feed
		* (CI server only) publish updated nuget feed

		The below is a very rough initial draft at some of the previously mentioned steps. It should not be considered authoritative or
		final in any way. (Remove this comment when this changes.)
	-->

	<ItemGroup>
		<CommonProjects Include="$(BaseDir)\src\common\**\*.csproj"/>
		<FrameworkProjects Include="$(BaseDir)\src\framework\**\*.csproj"/>
		<SDKProjects Include="$(BaseDir)\src\sdk\**\*.csproj"/>
		<InspectorProjects 
						   Include="$(BaseDir)\src\common\Euclid.Common\Euclid.Common.csproj;
									$(BaseDir)\src\common\Euclid.Common.Storage\Euclid.Common.Storage.csproj;
									$(BaseDir)\src\sdk\Euclid.Composites\Euclid.Composites.csproj;
									$(BaseDir)\src\sdk\Euclid.Composites.Mvc\Euclid.Composites.Mvc.csproj;
									$(BaseDir)\src\Framework\Euclid.Framework\Euclid.Framework.csproj;
									$(BaseDir)\src\Framework\Euclid.Framework.AgentMetadata\Euclid.Framework.AgentMetadata.csproj;
									$(BaseDir)\src\Framework\Euclid.Framework.Cqrs.NHibernate\Euclid.Framework.Cqrs.NHibernate.csproj;
									$(BaseDir)\src\Framework\Euclid.Framework.Models\Euclid.Framework.Models.csproj;
									$(BaseDir)\src\sdk\CompositeInspector\CompositeInspector.csproj" />
	</ItemGroup>

	<Target Name="BuildCommon">
		<MSBuild Projects="@(CommonProjects)" Properties="Configuration=$(Configuration)">
			<Output TaskParameter="TargetOutputs" ItemName="CommonOutput"/>
		</MSBuild>

		<ItemGroup>
			<Binaries Include="$(BaseDir)\src\common\**\bin\$(Configuration)\*.dll"/>
		</ItemGroup>

		<Copy SourceFiles="@(Binaries)" DestinationFolder="$(OutputDir)\common"/>
	</Target>

	<Target Name="BuildFramework">
		<MSBuild Projects="@(FrameworkProjects)" Properties="Configuration=$(Configuration)">
			<Output TaskParameter="TargetOutputs" ItemName="CommonOutput"/>
		</MSBuild>

		<ItemGroup>
			<Binaries Include="$(BaseDir)\src\framework\**\bin\$(Configuration)\*.dll"/>
		</ItemGroup>

		<Copy SourceFiles="@(Binaries)" DestinationFolder="$(OutputDir)\framework"/>
	</Target>

	<Target Name="BuildSDK">
		<MSBuild Projects="@(SDKProjects)" Properties="Configuration=$(Configuration)">
			<Output TaskParameter="TargetOutputs" ItemName="CommonOutput"/>
		</MSBuild>

		<ItemGroup>
			<Binaries Include="$(BaseDir)\src\sdk\**\bin\$(Configuration)\*.dll"/>
		</ItemGroup>

		<Copy SourceFiles="@(Binaries)" DestinationFolder="$(OutputDir)\sdk"/>
	</Target>

	<Target Name="BuildInspector">
		<MSBuild Projects="@(InspectorProjects)" Properties="Configuration=$(Configuration)">
			<Output TaskParameter="TargetOutputs" ItemName="CommonOutput"/>
		</MSBuild>

		<ItemGroup>
			<Binaries Include="$(BaseDir)\src\sdk\CompositeInspector\bin\$(Configuration)\*.dll"/>
		</ItemGroup>

		<Copy SourceFiles="@(Binaries)" DestinationFolder="$(OutputDir)\inspector"/>
	</Target>

	<Target Name="BuildAll" DependsOnTargets="BuildCommon; BuildFramework; BuildSDK; BuildInspector">
		<Message Text="Compiling Euclid Common, Framework, SDK, and Inspector."/>
	</Target>

	<Target Name="PackageEverything" DependsOnTargets="BuildAll">

		<Message Text="Packaging Euclid SDK and Inspector."/>

		<ItemGroup>
			<SdkNuSpec Include="$(MSBuildProjectDirectory)\EuclidSDK.nuspec"/>
			<InspectorNuSpec Include="$(MSBuildProjectDirectory)\EuclidCompositeInspector.nuspec"/>
			<CommonOutput Include="$(OutputDir)\common\*.*"/>
			<FrameworkOutput Include="$(OutputDir)\framework\*.*"/>
			<SDKOutput Include="$(OutputDir)\sdk\*.*"/>
			<InspectorOutput Include="$(OutputDir)\inspector\*.*"/>
		</ItemGroup>

		<Copy SourceFiles="@(SdkNuSpec)" DestinationFolder=".\package\sdk"/>
		<Copy SourceFiles="@(CommonOutput)" DestinationFolder=".\package\sdk"/>
		<Copy SourceFiles="@(FrameworkOutput)" DestinationFolder=".\package\sdk"/>
		<Copy SourceFiles="@(SDKOutput)" DestinationFolder=".\package\sdk"/>

		<Copy SourceFiles="@(InspectorNuSpec)" DestinationFolder=".\package\inspector"/>
		<Copy SourceFiles="@(InspectorOutput)" DestinationFolder=".\package\inspector"/>

		<ItemGroup>
			<SdkPackageDir Include="$(BaseDir)\package\sdk"/>
			<InspectorPackageDir Include="$(BaseDir)\package\inspector"/>
		</ItemGroup>

		<Exec WorkingDirectory="$(SdkPackageDir)" Command="nuget.exe pack EuclidSDK.nuspec" />

		<Exec WorkingDirectory="$(InspectorPackageDir)" Command="nuget.exe pack EuclidCompositeInspector.nuspec" />
	</Target>

</Project>